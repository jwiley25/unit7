{"ast":null,"code":"var _jsxFileName = \"/Users/jackwiley/Documents/GitHub/unit-7-project-react-gallery-app-jwiley25/react_app/ma/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\nimport Gallery from './components/Gallery';\nimport NoImages from './components/NoImages';\nimport Header from './components/Header';\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.performSearch = (query = 'leaves') => {\n      console.log(query);\n      this.setState({\n        loading: true\n      });\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=582677372a4e12822356da8dc6feacd4&tags=${query}&per_page=12&format=json&nojsoncallback=1`).then(response => {\n        this.setState({\n          images: response.data.photos.photo,\n          loading: false\n        });\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=582677372a4e12822356da8dc6feacd4&tags=leaves&per_page=12&format=json&nojsoncallback=1`).then(response => {\n        this.setState({\n          leavesImages: response.data.photos.photo\n        });\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=582677372a4e12822356da8dc6feacd4&tags=forest&per_page=12&format=json&nojsoncallback=1`).then(response => {\n        this.setState({\n          forestImages: response.data.photos.photo\n        });\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=582677372a4e12822356da8dc6feacd4&tags=sunset&per_page=12&format=json&nojsoncallback=1`).then(response => {\n        this.setState({\n          sunsetImages: response.data.photos.photo\n        });\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n      }); // .then(response=>{\n      //   if(query==='leaves'){\n      //     this.setState({\n      //       leavesImages: response.data.photos.photo,\n      //       loading: false\n      //     })\n      //   }else if(query==='forest'){\n      //       this.setState({forestImages: response.data.photos.photo,\n      //       loading: false})\n      //   }else if(query==='sunset'){\n      //     this.setState({sunsetImages: response.data.photos.photo,\n      //     loading: false})\n      //   }else{\n      //     this.setState({\n      //       images: response.data.photos.photo,\n      //       newQuery: query,\n      //       loading: false\n      //     })\n      //   }\n      // })\n    };\n\n    this.state = {\n      images: [],\n      leavesImages: [],\n      forestImages: [],\n      sunsetImages: [],\n      loading: true,\n      newQuery: ''\n    };\n  }\n\n  componentDidMount() {\n    this.performSearch();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      search: this.performSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/leaves\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 49\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/leaves\",\n      render: () => this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 73\n        }\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(Gallery, {\n        data: this.state.leavesImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 93\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/forest\",\n      render: () => this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 73\n        }\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(Gallery, {\n        data: this.state.forestImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 93\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/sunset\",\n      render: () => this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 73\n        }\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(Gallery, {\n        data: this.state.sunsetImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 93\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/search/:query\",\n      render: () => this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 80\n        }\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(Gallery, {\n        data: this.state.images,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 100\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: NoImages,\n      render: () => /*#__PURE__*/React.createElement(NoImages, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jackwiley/Documents/GitHub/unit-7-project-react-gallery-app-jwiley25/react_app/ma/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Redirect","axios","Gallery","NoImages","Header","App","constructor","performSearch","query","console","log","setState","loading","get","then","response","images","data","photos","photo","catch","error","leavesImages","forestImages","sunsetImages","state","newQuery","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAEzCU,EAAAA,WAAW,GAAG;AACZ;;AADY,SAgBdC,aAhBc,GAgBA,CAACC,KAAK,GAAC,QAAP,KAAkB;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAKG,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAd;AACAX,MAAAA,KAAK,CAACY,GAAN,CAAW,mHAAkHL,KAAM,2CAAnI,EACGM,IADH,CACQC,QAAQ,IAAE;AACd,aAAKJ,QAAL,CAAc;AACZK,UAAAA,MAAM,EAAED,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBC,KADjB;AAEZP,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OANH,EAOGQ,KAPH,CAOUC,KAAD,IAAS;AACdZ,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CW,KAA/C;AACD,OATH;AAWApB,MAAAA,KAAK,CAACY,GAAN,CAAW,iKAAX,EACGC,IADH,CACQC,QAAQ,IAAE;AACd,aAAKJ,QAAL,CAAc;AACZW,UAAAA,YAAY,EAAEP,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBC;AADvB,SAAd;AAGD,OALH,EAMGC,KANH,CAMUC,KAAD,IAAS;AACdZ,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CW,KAA/C;AACD,OARH;AAUEpB,MAAAA,KAAK,CAACY,GAAN,CAAW,iKAAX,EACCC,IADD,CACMC,QAAQ,IAAE;AACd,aAAKJ,QAAL,CAAc;AACZY,UAAAA,YAAY,EAAER,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBC;AADvB,SAAd;AAGD,OALD,EAMCC,KAND,CAMQC,KAAD,IAAS;AACdZ,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CW,KAA/C;AACD,OARD;AAUApB,MAAAA,KAAK,CAACY,GAAN,CAAW,iKAAX,EACCC,IADD,CACMC,QAAQ,IAAE;AACd,aAAKJ,QAAL,CAAc;AACZa,UAAAA,YAAY,EAAET,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBC;AADvB,SAAd;AAGD,OALD,EAMCC,KAND,CAMQC,KAAD,IAAS;AACdZ,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CW,KAA/C;AACD,OARD,EAlC4B,CA6C5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAjFa;;AAEZ,SAAKI,KAAL,GAAW;AACTT,MAAAA,MAAM,EAAE,EADC;AAETM,MAAAA,YAAY,EAAE,EAFL;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,YAAY,EAAE,EAJL;AAKTZ,MAAAA,OAAO,EAAE,IALA;AAMTc,MAAAA,QAAQ,EAAE;AAND,KAAX;AAQD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKpB,aAAL;AACD;;AAqEDqB,EAAAA,MAAM,GAAE;AACN,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKrB,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAE,mBAAM,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,MAAM,EAAE,MAAO,KAAKkB,KAAL,CAAWb,OAAZ,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAxB,gBAA4C,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKa,KAAL,CAAWH,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,MAAM,EAAE,MAAO,KAAKG,KAAL,CAAWb,OAAZ,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAxB,gBAA4C,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKa,KAAL,CAAWF,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,MAAM,EAAE,MAAO,KAAKE,KAAL,CAAWb,OAAZ,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAxB,gBAA4C,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKa,KAAL,CAAWD,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,gBAAZ;AAA6B,MAAA,MAAM,EAAE,MAAO,KAAKC,KAAL,CAAWb,OAAZ,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAxB,gBAA4C,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKa,KAAL,CAAWT,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEb,QAAlB;AAA4B,MAAA,MAAM,EAAE,mBAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAHF,CADF,CADF;AAkBD;;AAxGwC","sourcesContent":["import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom'\nimport './App.css';\nimport axios from 'axios'\n\nimport Gallery from './components/Gallery';\nimport NoImages from './components/NoImages';\nimport Header from './components/Header';\n\nexport default class App extends Component {\n  \n  constructor() {\n    super();\n    this.state={\n      images: [],\n      leavesImages: [],\n      forestImages: [],\n      sunsetImages: [],\n      loading: true,\n      newQuery: ''\n    }\n  } \n\n  componentDidMount(){\n    this.performSearch()\n  }\n\n  performSearch=(query='leaves')=>{\n    console.log(query)\n    this.setState({loading:true})\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=582677372a4e12822356da8dc6feacd4&tags=${query}&per_page=12&format=json&nojsoncallback=1`)\n      .then(response=>{\n        this.setState({\n          images: response.data.photos.photo,\n          loading: false\n        })\n      })\n      .catch((error)=>{\n        console.log('Error fetching and parsing data', error)\n      })\n    \n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=582677372a4e12822356da8dc6feacd4&tags=leaves&per_page=12&format=json&nojsoncallback=1`)\n      .then(response=>{\n        this.setState({\n          leavesImages: response.data.photos.photo,\n        })\n      })\n      .catch((error)=>{\n        console.log('Error fetching and parsing data', error)\n      })\n\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=582677372a4e12822356da8dc6feacd4&tags=forest&per_page=12&format=json&nojsoncallback=1`)\n      .then(response=>{\n        this.setState({\n          forestImages: response.data.photos.photo,\n        })\n      })\n      .catch((error)=>{\n        console.log('Error fetching and parsing data', error)\n      })\n      \n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=582677372a4e12822356da8dc6feacd4&tags=sunset&per_page=12&format=json&nojsoncallback=1`)\n      .then(response=>{\n        this.setState({\n          sunsetImages: response.data.photos.photo\n        })\n      })\n      .catch((error)=>{\n        console.log('Error fetching and parsing data', error)\n      })\n    \n\n      // .then(response=>{\n      //   if(query==='leaves'){\n      //     this.setState({\n      //       leavesImages: response.data.photos.photo,\n      //       loading: false\n      //     })\n      //   }else if(query==='forest'){\n      //       this.setState({forestImages: response.data.photos.photo,\n      //       loading: false})\n      //   }else if(query==='sunset'){\n      //     this.setState({sunsetImages: response.data.photos.photo,\n      //     loading: false})\n      //   }else{\n      //     this.setState({\n      //       images: response.data.photos.photo,\n      //       newQuery: query,\n      //       loading: false\n      //     })\n      //   }\n      // })\n  }\n\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"container\">\n          <Header search={this.performSearch}/>\n\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to='/leaves'/>}/>\n            <Route path='/leaves' render={() => (this.state.loading) ?  <p>Loading...</p> : <Gallery data={this.state.leavesImages} /> } />\n            <Route path='/forest' render={() => (this.state.loading) ?  <p>Loading...</p> : <Gallery data={this.state.forestImages} /> } />\n            <Route path='/sunset' render={() => (this.state.loading) ?  <p>Loading...</p> : <Gallery data={this.state.sunsetImages} /> } />\n            <Route path='/search/:query' render={() => (this.state.loading) ?  <p>Loading...</p> : <Gallery data={this.state.images} /> } />\n            <Route component={NoImages} render={()=><NoImages />}/>\n          </Switch>\n\n       </div>\n      </BrowserRouter>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}